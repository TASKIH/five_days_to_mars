import Head from "next/head";
import { Paper, TextField, Typography } from "@mui/material";
import Grid from "@mui/system/Unstable_Grid";
import { Container } from "@mui/system";
import Button from "@mui/material/Button";
import { StoryService } from "@/services/storyService";
import React from "react";
import { useRouter } from "next/router";

export default function Home() {
  const [errorText, setErrorText] = React.useState("");
  const [values, setValues] = React.useState({
    characterName: "",
  });
  const router = useRouter();

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const handleChange = (event: any) => {
    setValues({
      ...values,
      [event.target.name]: event.target.value,
    });
  };
  const onButtonClick = () => {
    if (!values.characterName || values.characterName.length >= 20) {
      setErrorText("名前を20文字以内で入力してください。");
      return;
    }
    StoryService.saveNovel(StoryService.newNovel(values.characterName));
    router.push("/voyage");
  };
  return (
    <>
      <Head>
        <title>09:32 火星に向かう</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container sx={{ mt: 5 }}>
        <Paper sx={{ mx: "auto", maxWidth: 600, p: 5 }}>
          <Grid container>
            <Grid xs={12} sx={{ mb: 5 }}>
              <Typography variant={"h4"}>
                あなたの名前を教えてください
              </Typography>
            </Grid>

            <TextField
              error={!!errorText}
              required
              name="characterName"
              label="あなたの名前"
              variant="outlined"
              value={values.characterName}
              helperText={errorText}
              onChange={handleChange}
            />
            <Button color="primary" variant="outlined" onClick={onButtonClick}>
              OK
            </Button>
          </Grid>
        </Paper>
      </Container>
    </>
  );
}
